// scripts/merge-lcn.ts
import { readdirSync, writeFileSync } from 'fs'
import { join, resolve } from 'path'

// 1) Point at your data folder:
const LCN_PATH = resolve(__dirname, '../src/data/LCN')

// 2) Find all BATCH-XX subfolders:
const batches = readdirSync(LCN_PATH)
  .filter((name) => /^BATCH-\d+$/.test(name))

// 3) Read & collect each batch’s array
let all: string[] = []
for (const batch of batches) {
  // require the TS file via its transpiled JS in dev/Prod
  // (Next will compile .ts → .js)
  // so we point at the .js counterpart:
  const mod = require(join(LCN_PATH, batch, 'LCN_Data.js'))
  if (Array.isArray(mod.default)) {
    all = all.concat(mod.default)
  }
}

// 4) Emit a flat LCN_Data.ts
const outFile = join(LCN_PATH, 'LCN_Data.ts')
const content = `
// ⚠️ This file is autogenerated by scripts/merge-lcn.ts
//    Do not edit by hand — run “npm run gen:lcn” instead

const validLCNs: string[] = ${JSON.stringify(all, null, 2)}

export default validLCNs
`
writeFileSync(outFile, content, 'utf8')
console.log(`✔️  Wrote ${all.length} LCNs → ${outFile}`)
